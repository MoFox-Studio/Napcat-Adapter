name: Docker 构建与推送

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
      - "v*"
      - "*.*.*"
      - "*.*.*-*"
  workflow_dispatch: # 允许手动触发工作流

jobs:
  build-amd64:
    name: 构建 AMD64 镜像
    runs-on: ubuntu-24.04
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: 检出 Git 仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 克隆所需依赖
      - name: 克隆 maim_message
        run: git clone https://github.com/MaiM-with-u/maim_message maim_message

      - name: 克隆 lpmm
        run: git clone https://github.com/MaiM-with-u/MaiMBot-LPMM.git MaiMBot-LPMM

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      # 登录 Docker Hub
      - name: 登录到 Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 生成 Docker 镜像元数据
      - name: Docker 元数据
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/maibot

      # 构建并推送 AMD64 镜像
      - name: 构建并推送 AMD64
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          labels: ${{ steps.meta.outputs.labels }}
          file: ./Dockerfile
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/adapter:amd64-buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/adapter:amd64-buildcache,mode=max
          outputs: type=image,name=${{ secrets.DOCKERHUB_USERNAME }}/adapter,push-by-digest=true,name-canonical=true,push=true
          build-args: |
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            VCS_REF=${{ github.sha }}
